syntax = "proto3";

option java_multiple_files = true;
option java_package = "jp.openstandia.midpoint.grpc";

package midpoint;

/**
 * Provide services for self service resource.
 */
service SelfServiceResource {
    /**
     * Get self profile.
     */
    rpc getSelf(GetSelfRequest) returns (GetSelfResponse);

    /**
     * Get self assignments.
     */
    rpc getSelfAssignment(GetSelfAssignmentRequest) returns (GetSelfAssignmentResponse);

    /**
     * Modify self profile by deltas.
     */
    rpc modifyProfile(ModifyProfileRequest) returns (ModifyProfileResponse);

    /**
     * Update self credential with current password validating.
     */
    rpc updateCredential(UpdateCredentialRequest) returns (UpdateCredentialResponse);

    /**
     * Force update self credential.
     */
    rpc forceUpdateCredential(ForceUpdateCredentialRequest) returns (UpdateCredentialResponse);

    /**
     * Request assignments.
     */
    rpc requestAssignments(RequestAssignmentsRequest) returns (RequestAssignmentsResponse);

    /**
     * Add new user.
     */
    rpc addUser(AddUserRequest) returns (AddUserResponse);

    /**
     * Search users.
     */
    rpc searchUsers(SearchRequest) returns (SearchUsersResponse);

    /**
     * Search roles.
     */
    rpc searchRoles(SearchRequest) returns (SearchRolesResponse);

    /**
     * Search orgs.
     */
    rpc searchOrgs(SearchRequest) returns (SearchOrgsResponse);
}

message GetSelfRequest {
    repeated string options = 1;
    repeated string include = 2;
    repeated string exclude = 3;
    repeated string resolveNames = 4;
}

message GetSelfResponse {
    UserTypeMessage profile = 1;
}

message ExtensionMessage {
    string namespaceURI = 1;
    repeated ExtensionValue value = 2;
    bool is_single_value = 3;
}

message ExtensionValue {
    oneof value {
        string string = 1;
        PolyStringMessage poly_string = 2;
        IntegerMessage integer = 3;
        LongMessage long = 4;
        ReferenceMessage ref = 5;
    }
}

message BytesMessage {
    oneof bytes_optional {
        bytes value = 1;
    }
}

message IntegerMessage {
    oneof int_optional {
        int32 value = 1;
    }
}

message LongMessage {
    oneof long_optional {
        int64 value = 1;
    }
}

message PolyStringMessage {
    string orig = 1;
    string norm = 2;
}

message UserTypeMessage {
    // ObjectType

    // name.
    PolyStringMessage name = 1;
    // description
    string description = 2;
    // subtype
    repeated string subtype = 3;
    // lifecycleState
    string lifecycleState = 4;

    // AssignmentHolderType

    // assignment
    repeated AssignmentMessage assignment = 10;
    // archetypeRef
    repeated ReferenceMessage archetype_ref = 11;

    // FocusType
    BytesMessage jpegPhoto = 20;
    // cost center.
    string costCenter = 21;
    // locality.
    PolyStringMessage locality = 22;
    // preferredLanguage.
    string preferredLanguage = 23;
    // locale.
    string locale = 24;
    // timezone.
    string timezone = 25;
    // email address.
    string emailAddress = 26;
    // telephone number.
    string telephoneNumber = 27;

    // UserType

    // full name.
    PolyStringMessage fullName = 50;
    // given name.
    PolyStringMessage givenName = 51;
    // family name.
    PolyStringMessage familyName = 52;
    // additional name.
    PolyStringMessage additionalName = 53;
    // nick name.
    PolyStringMessage nickName = 54;
    // honorific prefix.
    PolyStringMessage honorificPrefix = 55;
    // honorific suffix.
    PolyStringMessage honorificSuffix = 56;
    // title.
    PolyStringMessage title = 57;
    // employee number.
    string employeeNumber = 58;
    // employee type.
    repeated string employeeType = 59;
    // organization.
    repeated PolyStringMessage organization = 60;
    // organizational unit.
    repeated PolyStringMessage organizationalUnit = 61;

    // extension. the key is "localPart" format of the QName.
    map<string, ExtensionMessage> extension = 100;
}

message RoleTypeMessage {
    // ObjectType

    // name.
    PolyStringMessage name = 1;
    // description
    string description = 2;
    // subtype
    repeated string subtype = 3;
    // lifecycleState
    string lifecycleState = 4;

    // AssignmentHolderType

    // assignment
    repeated AssignmentMessage assignment = 10;
    // archetypeRef
    repeated ReferenceMessage archetype_ref = 11;

    // FocusType
    BytesMessage jpegPhoto = 20;
    // cost center.
    string costCenter = 21;
    // locality.
    PolyStringMessage locality = 22;
    // preferredLanguage.
    string preferredLanguage = 23;
    // locale.
    string locale = 24;
    // timezone.
    string timezone = 25;
    // email address.
    string emailAddress = 26;
    // telephone number.
    string telephoneNumber = 27;

    // RoleType

    // role type.
    string roleType = 50;

    // extension. the key is "localPart" format of the QName.
    map<string, ExtensionMessage> extension = 100;
}

message OrgTypeMessage {
    // ObjectType

    // name.
    PolyStringMessage name = 1;
    // description
    string description = 2;
    // subtype
    repeated string subtype = 3;
    // lifecycleState
    string lifecycleState = 4;

    // AssignmentHolderType

    // assignment
    repeated AssignmentMessage assignment = 10;
    // archetypeRef
    repeated ReferenceMessage archetype_ref = 11;

    // FocusType
    BytesMessage jpegPhoto = 20;
    // cost center.
    string costCenter = 21;
    // locality.
    PolyStringMessage locality = 22;
    // preferredLanguage.
    string preferredLanguage = 23;
    // locale.
    string locale = 24;
    // timezone.
    string timezone = 25;
    // email address.
    string emailAddress = 26;
    // telephone number.
    string telephoneNumber = 27;

    // OrgType

    // org type.
    repeated string orgType = 50;
    // Is tenant.
    bool tenant = 51;
    // mail domain.
    repeated string mail_domain = 52;
    // display order.
    int32 display_order = 53;
    // security policy reference.
    //ReferenceMessage security_policy_ref = 54;

    // extension. the key is "localPart" format of the QName.
    map<string, ExtensionMessage> extension = 100;
}

message GetSelfAssignmentRequest {
    bool include_org_ref_detail = 1;
}

message GetSelfAssignmentResponse {
    repeated AssignmentMessage assignment = 1;
}

message AssignmentMessage {
    ReferenceMessage target_ref = 1;
    oneof org_ref_holder {
        ReferenceMessage org_ref = 2;
    }
    // extension. the key is "localPart" format of the QName.
    map<string, ExtensionMessage> extension = 3;
}

message ReferenceMessage {
    string oid = 1;
    oneof type_wrapper {
        QNameMessage type = 2;
        DefaultObjectType object_type = 3;
    }
    oneof relation_wrapper {
        QNameMessage relation = 4;
        DefaultRelationType relation_type = 5;
    }

    PolyStringMessage name = 6;
    PolyStringMessage display_name = 7;
    string description = 8;
    repeated ReferenceMessage archetype_ref = 9;
    string emailAddress = 10;
}

message QNameMessage {
    string namespace_URI = 1;
    string local_part = 2;
    string prefix = 3;
}

message ModifyProfileRequest {
    repeated UserItemDelta modifications = 1;
}

message UserItemDelta {
    oneof path_wrapper {
        string path = 1;
        ItemPathMessage item_path = 2;
        DefaultUserTypePath user_type_path = 3;
    }
    string valuesToAdd = 20;
    string valuesToReplace = 21;
    string valuesToDelete = 22;
}

message ItemPathMessage {
    repeated QNameMessage path = 1;
}

enum DefaultObjectType {
    OBJECT_TYPE = 0;
    FOCUS_TYPE = 1;
    ASSIGNMENT_HOLDER_TYPE = 2;
    USER_TYPE = 3;
    ABSTRACT_ROLE_TYPE = 4;
    ROLE_TYPE = 5;
    ORG_TYPE = 6;
    SERVICE_TYPE = 7;
    // TODO more type
}

enum DefaultRelationType {
    ORG_DEFAULT = 0;
    ORG_MANAGER = 1;
    ORG_META = 2;
    ORG_DEPUTY = 3;
    ORG_APPROVER = 4;
    ORG_OWNER = 5;
    ORG_CONSENT = 6;
}

enum DefaultUserTypePath {
    // ObjectType
    F_NAME = 0;
    F_DESCRIPTION = 1;
    F_SUBTYPE = 2;
    F_LIFECYCLE_STATE = 3;

    // FocusType
    F_JPEG_PHOTO = 20;
    F_COST_CENTER = 21;
    F_LOCALITY = 22;
    F_PREFERRED_LANGUAGE = 23;
    F_LOCALE = 24;
    F_TIMEZONE = 25;
    F_EMAIL_ADDRESS = 26;
    F_TELEPHONE_NUMBER = 27;

    // UserType
    F_FULL_NAME = 40;
    F_GIVEN_NAME = 41;
    F_FAMILY_NAME = 42;
    F_ADDITIONAL_NAME = 43;
    F_NICK_NAME = 44;
    F_HONORIFIC_PREFIX = 45;
    F_HONORIFIC_SUFFIX = 46;
    F_TITLE = 47;
    F_EMPLOYEE_NUMBER = 48;
    F_EMPLOYEE_TYPE = 49;
    F_ORGANIZATION = 50;
    F_ORGANIZATIONAL_UNIT = 51;
}

message ModifyProfileResponse {
}

message UpdateCredentialRequest {
    // Current credential.
    string old = 1;
    // New credential.
    string new = 2;
}

message ForceUpdateCredentialRequest {
    // New credential.
    string new = 1;
}

message UpdateCredentialResponse {
}

message RequestAssignmentsRequest {
    // Oid list of the users who want to be assigned.
    repeated string oids = 1;
    // Request assignments.
    repeated AssignmentMessage assignments = 2;
    // Comment
    string comment = 3;
}

message RequestAssignmentsResponse {
    // If the request was executed as background task, the task's oid is set.
    string task_oid = 1;
}

message SingleMessage {
    string key = 1;
    repeated Message args = 2;
}

message Message {
    oneof message_wrapper {
         SingleMessage single = 3;
         MessageList list = 4;
         string string = 5;
    }
}

message MessageList {
    repeated Message message = 1;
}

message PolicyError {
    Message message = 1;
}

message AddUserRequest {
    repeated string options = 1;
    UserTypeMessage profile = 2;
}

message AddUserResponse {
    string oid = 1;
}

message SearchRequest {
    QueryMessage query = 1;
    repeated string options = 2;
    repeated string include = 3;
    repeated string exclude = 4;
    repeated string resolveNames = 5;
}

message SearchUsersResponse {
    repeated UserTypeMessage results = 1;
    int32 number_of_all_results = 2;
}

message SearchRolesResponse {
    repeated RoleTypeMessage results = 1;
    int32 number_of_all_results = 2;
}

message SearchOrgsResponse {
    repeated OrgTypeMessage results = 1;
    int32 number_of_all_results = 2;
}

message QueryMessage {
    PagingMessage paging = 1;
    ObjectFilterMessage filter = 2;
}

message PagingMessage {
    int32 offset = 1;
    int32 maxSize = 2;
    repeated ObjectOrderingMessage ordering = 3;
}

enum OrderDirectionType {
    ASCEDING = 0;
    DESCENDING = 1;
}

message ObjectOrderingMessage {
    string order_by = 1;
    OrderDirectionType orderDirection = 2;
}

message ObjectFilterMessage {
    oneof filter {
        AndFilterMessage and = 1;
        OrFilterMessage or = 2;
        NotFilterMessage not = 3;
        FilterEntryMessage eq = 4;
        FilterEntryMessage starts_with = 5;
        FilterEntryMessage contains = 6;
        FilterEntryMessage ends_with = 7;

        // PolyString

        FilterEntryMessage eq_poly_string = 10;
        FilterEntryMessage starts_with_poly_string = 11;
        FilterEntryMessage contains_poly_string = 12;
        FilterEntryMessage ends_with_poly_string = 13;
    }
}

message AndFilterMessage {
    repeated ObjectFilterMessage conditions = 1;
}

message OrFilterMessage {
    repeated ObjectFilterMessage conditions = 1;
}

message NotFilterMessage {
    repeated ObjectFilterMessage filter = 1;
}

message FilterEntryMessage {
    string full_path = 1;
    QNameMessage matching_rule = 2;
    string value = 3;
}

