syntax = "proto3";

option java_multiple_files = true;
option java_package = "jp.openstandia.midpoint.grpc";

import "google/protobuf/timestamp.proto";

package midpoint;

/**
 * Provide services for self service resource.
 */
service SelfServiceResource {
    /**
     * Get self profile.
     */
    rpc getSelf (GetSelfRequest) returns (GetSelfResponse);

    /**
     * Get self assignments.
     */
    rpc getSelfAssignment (GetSelfAssignmentRequest) returns (GetSelfAssignmentResponse);

    /**
     * Modify self profile by deltas.
     */
    rpc modifyProfile (ModifyProfileRequest) returns (ModifyProfileResponse);

    /**
     * Update self credential with current password validating.
     */
    rpc updateCredential (UpdateCredentialRequest) returns (UpdateCredentialResponse);

    /**
     * Force update self credential.
     */
    rpc forceUpdateCredential (ForceUpdateCredentialRequest) returns (UpdateCredentialResponse);

    /**
     * Generate value by value policy.
     */
    rpc generateValue (GenerateValueRequest) returns (GenerateValueResponse);

    /**
     * Check user nonce.
     */
    rpc checkNonce (CheckNonceRequest) returns (CheckNonceResponse);

    /**
     * Request assignments.
     */
    rpc requestAssignments (RequestAssignmentsRequest) returns (RequestAssignmentsResponse);

    /**
     * Add new user.
     */
    rpc addUser (AddUserRequest) returns (AddUserResponse);

    /**
     * Modify an user.
     */
    rpc modifyUser (ModifyUserRequest) returns (ModifyUserResponse);

    /**
     * Get an user.
     */
    rpc getUser (GetUserRequest) returns (GetUserResponse);

    /**
     * Add new org.
     */
    rpc addOrg (AddOrgRequest) returns (AddObjectResponse);

    /**
     * Get an org.
     */
    rpc getOrg (GetOrgRequest) returns (GetOrgResponse);

    /**
     * Add new role.
     */
    rpc addRole (AddRoleRequest) returns (AddObjectResponse);

    /**
     * Get an role.
     */
    rpc getRole (GetRoleRequest) returns (GetRoleResponse);

    /**
     * Add service role.
     */
    rpc addService (AddServiceRequest) returns (AddObjectResponse);

    /**
     * Get an service.
     */
    rpc getService (GetServiceRequest) returns (GetServiceResponse);

    /**
     * Get an object.
     */
    rpc getObject (GetObjectRequest) returns (GetObjectResponse);

    /**
     * Add object.
     */
    rpc addObject (AddObjectRequest) returns (AddObjectResponse);

    /**
     * Modify object.
     */
    rpc modifyObject (ModifyObjectRequest) returns (ModifyObjectResponse);

    /**
     * Delete an object.
     */
    rpc deleteObject (DeleteObjectRequest) returns (DeleteObjectResponse);

    /**
     * Recompute an object.
     */
    rpc recomputeObject (RecomputeObjectRequest) returns (RecomputeObjectResponse);

    /**
     * Search users.
     */
    rpc searchUsers (SearchRequest) returns (SearchUsersResponse);

    /**
     * Search roles.
     */
    rpc searchRoles (SearchRequest) returns (SearchRolesResponse);

    /**
     * Search orgs.
     */
    rpc searchOrgs (SearchRequest) returns (SearchOrgsResponse);

    /**
     * Search services.
     */
    rpc searchServices (SearchRequest) returns (SearchServicesResponse);

    /**
     * Search objects.
     */
    rpc searchObjects (SearchObjectsRequest) returns (SearchObjectsResponse);

    /**
     * Search objects as stream.
     */
    rpc searchObjectsAsStream (SearchObjectsRequest) returns (stream SearchObjectsResponse);

    /**
     * Search assignments.
     */
    rpc searchAssignments (SearchAssignmentsRequest) returns (SearchAssignmentsResponse);

    /**
     * Get lookup table.
     */
    rpc getLookupTable (GetLookupTableRequest) returns (GetLookupTableResponse);
}

message GetSelfRequest {
    repeated string options = 1;
    repeated string include = 2;
    repeated string exclude = 3;
    repeated string resolve_names = 4;
}

message GetSelfResponse {
    UserTypeMessage profile = 1;
}

message BytesMessage {
    oneof bytes_optional {
        bytes value = 1;
    }
}

message IntegerMessage {
    oneof int_optional {
        int32 value = 1;
    }
}

message LongMessage {
    oneof long_optional {
        int64 value = 1;
    }
}

message PolyStringMessage {
    string orig = 1;
    string norm = 2;
}

message UserTypeMessage {
    // ObjectType

    // oid.
    string oid = 1;
    // version.
    string version = 2;
    // name.
    PolyStringMessage name = 3;
    // description
    string description = 4;
    // subtype
    repeated string subtype = 5;
    // lifecycleState
    string lifecycle_state = 6;
    // parentOrgRef
    repeated ReferenceMessage parentOrgRef = 7;

    // AssignmentHolderType

    // assignment
    repeated AssignmentMessage assignment = 10;
    // archetypeRef
    repeated ReferenceMessage archetype_ref = 11;
    // roleMembershipRef
    repeated ReferenceMessage role_membership_ref = 12;

    // FocusType
    BytesMessage jpeg_photo = 20;
    // cost center.
    string cost_center = 21;
    // locality.
    PolyStringMessage locality = 22;
    // preferredLanguage.
    string preferred_language = 23;
    // locale.
    string locale = 24;
    // timezone.
    string timezone = 25;
    // email address.
    string email_address = 26;
    // telephone number.
    string telephone_number = 27;

    // UserType

    // full name.
    PolyStringMessage full_name = 50;
    // given name.
    PolyStringMessage given_name = 51;
    // family name.
    PolyStringMessage family_name = 52;
    // additional name.
    PolyStringMessage additional_name = 53;
    // nick name.
    PolyStringMessage nick_name = 54;
    // honorific prefix.
    PolyStringMessage honorific_prefix = 55;
    // honorific suffix.
    PolyStringMessage honorific_suffix = 56;
    // title.
    PolyStringMessage title = 57;
    // employee number.
    string employee_number = 58;
    // employee type. (removed in 4.4)
    // repeated string employee_type = 59;
    // organization.
    repeated PolyStringMessage organization = 60;
    // organizational unit.
    repeated PolyStringMessage organizational_unit = 61;

    // extension. the key is "localPart" format of the QName.
    map<string, ItemMessage> extension = 100;
}

message RoleTypeMessage {
    // ObjectType

    // oid.
    string oid = 1;
    // version.
    string version = 2;
    // name.
    PolyStringMessage name = 3;
    // description
    string description = 4;
    // subtype
    repeated string subtype = 5;
    // lifecycleState
    string lifecycle_state = 6;
    // parentOrgRef
    repeated ReferenceMessage parentOrgRef = 7;

    // AssignmentHolderType

    // assignment
    repeated AssignmentMessage assignment = 10;
    // archetypeRef
    repeated ReferenceMessage archetype_ref = 11;
    // roleMembershipRef
    repeated ReferenceMessage role_membership_ref = 12;

    // FocusType

    // jpeg photo
    BytesMessage jpeg_photo = 20;
    // cost center.
    string costCenter = 21;
    // locality.
    PolyStringMessage locality = 22;
    // preferredLanguage.
    string preferred_language = 23;
    // locale.
    string locale = 24;
    // timezone.
    string timezone = 25;
    // email address.
    string email_address = 26;
    // telephone number.
    string telephone_number = 27;

    // AbstractRoleType

    // display name.
    PolyStringMessage display_name = 50;
    // identifier.
    string identifier = 51;
    // requestable.
    bool requestable = 52;
    // delegable.
    bool delegable = 53;
    // risk level.
    string risk_level = 54;

    // RoleType

    // role type. (removed in 4.4)
    // string role_type = 70;

    // extension. the key is "localPart" format of the QName.
    map<string, ItemMessage> extension = 100;
}

message OrgTypeMessage {
    // ObjectType

    // oid.
    string oid = 1;
    // version.
    string version = 2;
    // name.
    PolyStringMessage name = 3;
    // description
    string description = 4;
    // subtype
    repeated string subtype = 5;
    // lifecycleState
    string lifecycle_state = 6;
    // parentOrgRef
    repeated ReferenceMessage parentOrgRef = 7;

    // AssignmentHolderType

    // assignment
    repeated AssignmentMessage assignment = 10;
    // archetypeRef
    repeated ReferenceMessage archetype_ref = 11;
    // roleMembershipRef
    repeated ReferenceMessage role_membership_ref = 12;

    // FocusType

    // jpeg photo.
    BytesMessage jpeg_photo = 20;
    // cost center.
    string costCenter = 21;
    // locality.
    PolyStringMessage locality = 22;
    // preferredLanguage.
    string preferred_language = 23;
    // locale.
    string locale = 24;
    // timezone.
    string timezone = 25;
    // email address.
    string email_address = 26;
    // telephone number.
    string telephone_number = 27;

    // AbstractRoleType

    // display name.
    PolyStringMessage display_name = 50;
    // identifier.
    string identifier = 51;
    // requetable.
    bool requestable = 52;
    // delegable.
    bool delegable = 53;
    // risk level.
    string risk_level = 54;

    // OrgType

    // org type. (removed in 4.4)
    // repeated string org_type = 70;
    // Is tenant.
    bool tenant = 71;
    // mail domain.
    repeated string mail_domain = 72;
    // display order.
    int32 display_order = 73;
    // security policy reference.
    // TODO need to support this?
    //ReferenceMessage security_policy_ref = 74;

    // extension. the key is "localPart" format of the QName.
    map<string, ItemMessage> extension = 100;
}

message ServiceTypeMessage {
    // ObjectType

    // oid.
    string oid = 1;
    // version.
    string version = 2;
    // name.
    PolyStringMessage name = 3;
    // description
    string description = 4;
    // subtype
    repeated string subtype = 5;
    // lifecycleState
    string lifecycle_state = 6;
    // parentOrgRef
    repeated ReferenceMessage parentOrgRef = 7;

    // AssignmentHolderType

    // assignment
    repeated AssignmentMessage assignment = 10;
    // archetypeRef
    repeated ReferenceMessage archetype_ref = 11;
    // roleMembershipRef
    repeated ReferenceMessage role_membership_ref = 12;

    // FocusType

    // jpeg photo
    BytesMessage jpeg_photo = 20;
    // cost center.
    string costCenter = 21;
    // locality.
    PolyStringMessage locality = 22;
    // preferredLanguage.
    string preferred_language = 23;
    // locale.
    string locale = 24;
    // timezone.
    string timezone = 25;
    // email address.
    string email_address = 26;
    // telephone number.
    string telephone_number = 27;

    // AbstractRoleType

    // display name.
    PolyStringMessage display_name = 50;
    // identifier.
    string identifier = 51;
    // requestable.
    bool requestable = 52;
    // delegable.
    bool delegable = 53;
    // risk level.
    string risk_level = 54;

    // ServiceType

    // service type. (removed in 4.4)
    // repeated string service_type = 70;
    // display order.
    int32 display_order = 71;
    // url
    string url = 72;

    // extension. the key is "localPart" format of the QName.
    map<string, ItemMessage> extension = 100;
}

message GetSelfAssignmentRequest {
    bool include_org_ref_details = 1;
    bool include_indirect = 2;
    bool resolve_ref_names = 3;
    bool include_parent_org_ref_details = 4;
    QueryMessage query = 10;
}

message GetSelfAssignmentResponse {
    repeated AssignmentMessage assignment = 1;
}

message AssignmentMessage {
    ReferenceMessage target_ref = 1;
    oneof org_ref_holder {
        ReferenceMessage org_ref = 2;
    }
    // extension. the key is "localPart" format of the QName.
    map<string, ItemMessage> extension = 3;
    repeated string subtype = 4;
    bool indirect = 10;
}

message ReferenceMessage {
    string oid = 1;
    oneof type_wrapper {
        QNameMessage type = 2;
        DefaultObjectType object_type = 3;
    }
    oneof relation_wrapper {
        QNameMessage relation = 4;
        DefaultRelationType relation_type = 5;
    }

    PolyStringMessage name = 6;
    PolyStringMessage display_name = 7;
    string description = 8;
    repeated ReferenceMessage archetype_ref = 9;
    string email_address = 10;
    repeated string subtype = 11;
    repeated ReferenceMessage parent_org_ref = 12;
}

message QNameMessage {
    string namespace_URI = 1;
    string local_part = 2;
    string prefix = 3;
}

message ModifyProfileRequest {
    repeated string options = 1;
    repeated UserItemDeltaMessage modifications = 2;
}

message UserItemDeltaMessage {
    oneof path_wrapper {
        string path = 1;
        ItemPathMessage item_path = 2;
        DefaultUserTypePath user_type_path = 3;
    }
    repeated string values_to_add = 20;
    repeated string values_to_replace = 21;
    repeated string values_to_delete = 22;

    repeated PrismValueMessage prism_values_to_add = 23;
    repeated PrismValueMessage prism_values_to_replace = 24;
    repeated PrismValueMessage prism_values_to_delete = 25;
}

message ItemDeltaMessage {
    oneof path_wrapper {
        string path = 1;
        ItemPathMessage item_path = 2;
    }
    repeated PrismValueMessage prism_values_to_add = 23;
    repeated PrismValueMessage prism_values_to_replace = 24;
    repeated PrismValueMessage prism_values_to_delete = 25;
}

message PrismValueMessage {
    string namespace_URI = 1;
    oneof value_wrapper {
        PrismContainerValueMessage container = 2;
        PrismPropertyValueMessage property = 3;
        // TODO: Rename to PrismReferenceValueMessage
        ReferenceMessage ref = 4;
    }
}

message PrismObjectMessage {
    string oid = 1;
    QNameMessage itemName = 2;
    QNameMessage typeName = 3;
    // the key is "localPart" format of the QName.
    map<string, ItemMessage> value = 10;
}

message PrismContainerValueMessage {
    int64 id = 1;
    // the key is "localPart" format of the QName.
    map<string, ItemMessage> value = 2;
}

message PrismPropertyValueMessage {
    oneof value {
        string string = 1;
        PolyStringMessage poly_string = 2;
        IntegerMessage integer = 3;
        LongMessage long = 4;
    }
}

message ItemMessage {
    bool multiple = 2;
    oneof value_wrapper {
        PrismContainerMessage container = 3;
        PrismPropertyMessage property = 4;
        // TODO: Rename to PrismReferenceValueMessage
        PrismReferenceMessage ref = 5;
    }
    QNameMessage itemName = 10;
    QNameMessage typeName = 11;
}

message PrismContainerMessage {
    repeated PrismContainerValueMessage values = 1;
}

message PrismPropertyMessage {
    repeated PrismPropertyValueMessage values = 1;
}

message PrismReferenceMessage {
    // TODO: Rename to PrismReferenceValueMessage
    repeated ReferenceMessage values = 1;
}

message ItemPathMessage {
    repeated QNameMessage path = 1;
}

enum DefaultObjectType {
    OBJECT_TYPE = 0;
    FOCUS_TYPE = 1;
    ASSIGNMENT_HOLDER_TYPE = 2;
    USER_TYPE = 3;
    ABSTRACT_ROLE_TYPE = 4;
    ROLE_TYPE = 5;
    ORG_TYPE = 6;
    SERVICE_TYPE = 7;
    ARCHETYPE_TYPE = 8;
    LOOKUP_TABLE_TYPE = 9;
    // TODO more type
}

enum DefaultRelationType {
    ORG_DEFAULT = 0;
    ORG_MANAGER = 1;
    ORG_META = 2;
    ORG_DEPUTY = 3;
    ORG_APPROVER = 4;
    ORG_OWNER = 5;
    ORG_CONSENT = 6;
}

enum DefaultUserTypePath {
    // ObjectType
    F_NAME = 0;
    F_DESCRIPTION = 1;
    F_SUBTYPE = 2;
    F_LIFECYCLE_STATE = 3;

    // FocusType
    F_JPEG_PHOTO = 20;
    F_COST_CENTER = 21;
    F_LOCALITY = 22;
    F_PREFERRED_LANGUAGE = 23;
    F_LOCALE = 24;
    F_TIMEZONE = 25;
    F_EMAIL_ADDRESS = 26;
    F_TELEPHONE_NUMBER = 27;

    // UserType
    F_FULL_NAME = 40;
    F_GIVEN_NAME = 41;
    F_FAMILY_NAME = 42;
    F_ADDITIONAL_NAME = 43;
    F_NICK_NAME = 44;
    F_HONORIFIC_PREFIX = 45;
    F_HONORIFIC_SUFFIX = 46;
    F_TITLE = 47;
    F_EMPLOYEE_NUMBER = 48;
    F_EMPLOYEE_TYPE = 49;
    F_ORGANIZATION = 50;
    F_ORGANIZATIONAL_UNIT = 51;
}

message ModifyProfileResponse {
}

message UpdateCredentialRequest {
    // Current credential.
    string old = 1;
    // New credential.
    string new = 2;
}

message ForceUpdateCredentialRequest {
    // New credential.
    string new = 1;
    bool clear_nonce = 2;
    bool active = 3;
}

message UpdateCredentialResponse {
}

message GenerateValueRequest {
    string value_policy_oid = 1;
    int32 default_length = 2;
    bool generate_minimal_size = 3;
}

message GenerateValueResponse {
    string value = 1;
}

message CheckNonceRequest {
    string nonce = 1;
    string nonce_name = 2;
}

message CheckNonceResponse {
    bool valid = 1;
    string error = 2;
}

message RequestAssignmentsRequest {
    // Oid list of the users who want to be assigned.
    repeated string oids = 1;
    // Request assignments.
    repeated AssignmentMessage assignments = 2;
    // Comment
    string comment = 3;
}

message RequestAssignmentsResponse {
    // If the request was executed as background task, the task's oid is set.
    string task_oid = 1;
}

message SingleMessage {
    string key = 1;
    repeated Message args = 2;
}

message Message {
    oneof message_wrapper {
        SingleMessage single = 3;
        MessageList list = 4;
        string string = 5;
    }
}

message MessageList {
    repeated Message message = 1;
}

message PolicyError {
    Message message = 1;
}

message AddUserRequest {
    repeated string options = 1;
    UserTypeMessage profile = 2;
}

message AddUserResponse {
    string oid = 1;
}

message ModifyUserRequest {
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
    repeated string options = 20;
    repeated UserItemDeltaMessage modifications = 21;
}

message ModifyUserResponse {
}

message GetUserRequest {
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
    repeated string options = 20;
    repeated string include = 21;
    repeated string exclude = 22;
    repeated string resolve_names = 23;
}

message GetUserResponse {
    UserTypeMessage result = 1;
}

message AddOrgRequest {
    repeated string options = 1;
    OrgTypeMessage object = 2;
}

message AddRoleRequest {
    repeated string options = 1;
    RoleTypeMessage object = 2;
}

message AddServiceRequest {
    repeated string options = 1;
    ServiceTypeMessage object = 2;
}

message GetOrgRequest {
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
    repeated string options = 20;
    repeated string include = 21;
    repeated string exclude = 22;
    repeated string resolve_names = 23;
}

message GetRoleRequest {
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
    repeated string options = 20;
    repeated string include = 21;
    repeated string exclude = 22;
    repeated string resolve_names = 23;
}

message GetServiceRequest {
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
    repeated string options = 20;
    repeated string include = 21;
    repeated string exclude = 22;
    repeated string resolve_names = 23;
}

message GetOrgResponse {
    OrgTypeMessage result = 1;
}

message GetRoleResponse {
    RoleTypeMessage result = 1;
}

message GetServiceResponse {
    ServiceTypeMessage result = 1;
}

message GetObjectRequest {
    oneof type_wrapper {
        QNameMessage type = 1;
        DefaultObjectType object_type = 2;
    }
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
    repeated string options = 20;
    repeated string include = 21;
    repeated string exclude = 22;
    repeated string resolve_names = 23;
}

message GetObjectResponse {
    ItemMessage result = 1;
}

message AddObjectRequest {
    repeated string options = 1;
    oneof type_wrapper {
        QNameMessage type = 2;
        DefaultObjectType object_type = 3;
    }
    PrismContainerMessage object = 10;
}

message AddObjectResponse {
    string oid = 1;
}

message ModifyObjectRequest {
    oneof type_wrapper {
        QNameMessage type = 1;
        DefaultObjectType object_type = 2;
    }
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
    repeated string options = 20;
    repeated ItemDeltaMessage modifications = 21;
}

message ModifyObjectResponse {
}

message DeleteObjectRequest {
    oneof type_wrapper {
        QNameMessage type = 1;
        DefaultObjectType object_type = 2;
    }
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
    repeated string options = 20;
}

message DeleteObjectResponse {
}

message RecomputeObjectRequest {
    oneof type_wrapper {
        QNameMessage type = 1;
        DefaultObjectType object_type = 2;
    }
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
}

message RecomputeObjectResponse {
}

message SearchRequest {
    QueryMessage query = 1;
    repeated string options = 2;
    repeated string include = 3;
    repeated string exclude = 4;
    repeated string resolve_names = 5;
}

message SearchUsersResponse {
    repeated UserTypeMessage results = 1;
    int32 number_of_all_results = 2;
}

message SearchRolesResponse {
    repeated RoleTypeMessage results = 1;
    int32 number_of_all_results = 2;
}

message SearchOrgsResponse {
    repeated OrgTypeMessage results = 1;
    int32 number_of_all_results = 2;
}

message SearchServicesResponse {
    repeated ServiceTypeMessage results = 1;
    int32 number_of_all_results = 2;
}

message SearchObjectsRequest {
    oneof type_wrapper {
        QNameMessage type = 1;
        DefaultObjectType object_type = 2;
    }
    QueryMessage query = 10;
    repeated string options = 11;
    repeated string include = 12;
    repeated string exclude = 13;
    repeated string resolve_names = 14;
}

message SearchObjectsResponse {
    repeated PrismObjectMessage results = 1;
    int32 number_of_all_results = 2;
}

message SearchAssignmentsRequest {
    oneof id_wrapper {
        string oid = 1;
        string name = 2;
    }
    bool include_org_ref_details = 3;
    bool include_indirect = 4;
    bool resolve_ref_names = 5;
    bool include_parent_org_ref_details = 6;
    QueryMessage query = 10;
}

message SearchAssignmentsResponse {
    repeated AssignmentMessage assignment = 1;
}

message QueryMessage {
    PagingMessage paging = 1;
    ObjectFilterMessage filter = 2;
}

message PagingMessage {
    int32 offset = 1;
    int32 maxSize = 2;
    repeated ObjectOrderingMessage ordering = 3;
}

enum OrderDirectionType {
    ASCEDING = 0;
    DESCENDING = 1;
}

message ObjectOrderingMessage {
    string order_by = 1;
    OrderDirectionType order_direction = 2;
}

message ObjectFilterMessage {
    oneof filter {
        AndFilterMessage and = 1;
        OrFilterMessage or = 2;
        NotFilterMessage not = 3;

        // String

        FilterEntryMessage eq = 4;
        FilterEntryMessage starts_with = 5;
        FilterEntryMessage contains = 6;
        FilterEntryMessage ends_with = 7;

        // PolyString

        FilterEntryMessage eq_poly_string = 10;
        FilterEntryMessage starts_with_poly_string = 11;
        FilterEntryMessage contains_poly_string = 12;
        FilterEntryMessage ends_with_poly_string = 13;

        // inOid
        FilterInOidMessage in_oid = 15;

        // Reference
        FilterReferenceMessage ref = 20;

        // Org
        FilterOrgRootMessage org_root = 30;
        FilterOrgReferenceMessage org_ref = 31;
    }
}

message AndFilterMessage {
    repeated ObjectFilterMessage conditions = 1;
}

message OrFilterMessage {
    repeated ObjectFilterMessage conditions = 1;
}

message NotFilterMessage {
    ObjectFilterMessage filter = 1;
}

message FilterEntryMessage {
    string full_path = 1;
    QNameMessage matching_rule = 2;
    string value = 3;
}

message FilterInOidMessage {
    repeated string value = 1;
}

message FilterReferenceMessage {
    string full_path = 1;
    ReferenceMessage value = 2;
}

message FilterOrgRootMessage {
    bool is_root = 1;
}

message FilterOrgReferenceMessage {
    ReferenceMessage value = 1;
    OrgFilterScope scope = 2;
}

enum OrgFilterScope {
    ONE_LEVEL = 0;
    SUBTREE = 1;
    ANCESTORS = 2;
}

message GetLookupTableRequest {
    oneof id_wrapper {
        string oid = 10;
        string name = 11;
    }
    repeated string options = 20;
    repeated string include = 21;
    repeated string exclude = 22;
    RelationalValueSearchQueryMessage relationalValueSearchQuery = 30;
}

message RelationalValueSearchQueryMessage {
    QNameMessage column = 1;
    string searchValue = 2;
    RelationalValueSearch searchType = 3;
    PagingMessage paging = 4;
}

enum RelationalValueSearch {
    EXACT = 0;
    STARTS_WITH = 1;
    SUBSTRING = 2;
}

message GetLookupTableResponse {
    LookupTableMessage result = 1;
}

message LookupTableMessage {
    // oid
    string oid = 1;
    // version
    string version = 2;
    // name
    PolyStringMessage name = 3;
    // description
    string description = 4;
    // row
    repeated LookupTableRowMessage row = 5;
}

message LookupTableRowMessage {
    // id
    int64 id = 1;
    // key
    string key = 2;
    // value
    string value = 3;
    // label
    PolyStringMessage label = 4;
    // lastChangeTimestamp
    google.protobuf.Timestamp lastChangeTimestamp = 5;
}